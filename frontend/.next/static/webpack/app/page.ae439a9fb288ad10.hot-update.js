"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./components/MovieGrid.tsx":
/*!**********************************!*\
  !*** ./components/MovieGrid.tsx ***!
  \**********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ MovieGrid; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var lodash_debounce__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash/debounce */ \"(app-pages-browser)/./node_modules/lodash/debounce.js\");\n/* harmony import */ var lodash_debounce__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash_debounce__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/navigation */ \"(app-pages-browser)/./node_modules/next/dist/api/navigation.js\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\nconst YEARS = Array.from({\n    length: 25\n}, (_, i)=>(new Date().getFullYear() - i).toString());\nfunction MovieGrid() {\n    _s();\n    const [movies, setMovies] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [search, setSearch] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [filters, setFilters] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        genre: \"\",\n        quality: \"\",\n        rating: \"\",\n        year: \"\"\n    });\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const router = (0,next_navigation__WEBPACK_IMPORTED_MODULE_3__.useRouter)();\n    const fetchMovies = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(lodash_debounce__WEBPACK_IMPORTED_MODULE_2___default()(async (searchTerm, currentFilters)=>{\n        try {\n            var _currentFilters_genre, _currentFilters_quality, _currentFilters_rating, _currentFilters_year;\n            setLoading(true);\n            const params = new URLSearchParams();\n            // Add search parameter\n            if (searchTerm === null || searchTerm === void 0 ? void 0 : searchTerm.trim()) {\n                params.append(\"q\", searchTerm.trim());\n            }\n            // Add filter parameters\n            if ((_currentFilters_genre = currentFilters.genre) === null || _currentFilters_genre === void 0 ? void 0 : _currentFilters_genre.trim()) {\n                params.append(\"genre\", currentFilters.genre.trim());\n            }\n            if ((_currentFilters_quality = currentFilters.quality) === null || _currentFilters_quality === void 0 ? void 0 : _currentFilters_quality.trim()) {\n                params.append(\"quality\", currentFilters.quality.trim().toUpperCase());\n            }\n            if ((_currentFilters_rating = currentFilters.rating) === null || _currentFilters_rating === void 0 ? void 0 : _currentFilters_rating.trim()) {\n                const numericRating = currentFilters.rating.replace(/[^0-9]/g, \"\");\n                params.append(\"min_rating\", numericRating);\n            }\n            if ((_currentFilters_year = currentFilters.year) === null || _currentFilters_year === void 0 ? void 0 : _currentFilters_year.trim()) {\n                params.append(\"release_year\", currentFilters.year.trim());\n            }\n            // Always add limit\n            params.append(\"limit\", \"102\");\n            console.log(\"Fetching movies with params:\", {\n                searchTerm,\n                filters: currentFilters,\n                queryParams: Object.fromEntries(params.entries())\n            });\n            const res = await fetch(\"/api/movies?\".concat(params));\n            if (!res.ok) {\n                const errorText = await res.text();\n                console.error(\"Error response:\", errorText);\n                throw new Error(\"Failed to fetch movies: \".concat(errorText));\n            }\n            const data = await res.json();\n            if (!Array.isArray(data)) {\n                console.error(\"Invalid response format:\", data);\n                throw new Error(\"Invalid response format from server\");\n            }\n            // Filter the movies based on current filters\n            const filteredMovies = data.filter((movie)=>{\n                var _movie_genre;\n                // Check genre match\n                if (currentFilters.genre && !((_movie_genre = movie.genre) === null || _movie_genre === void 0 ? void 0 : _movie_genre.includes(currentFilters.genre))) {\n                    return false;\n                }\n                // Check quality match\n                if (currentFilters.quality && movie.quality !== currentFilters.quality) {\n                    return false;\n                }\n                // Check rating match\n                if (currentFilters.rating) {\n                    const minRating = parseFloat(currentFilters.rating.replace(/[^0-9]/g, \"\"));\n                    const movieRating = parseFloat(movie.rating || \"0\");\n                    if (isNaN(movieRating) || movieRating < minRating) {\n                        return false;\n                    }\n                }\n                // Check year match\n                if (currentFilters.year) {\n                    const movieYear = movie.released ? new Date(movie.released).getFullYear().toString() : \"\";\n                    if (movieYear !== currentFilters.year) {\n                        return false;\n                    }\n                }\n                return true;\n            });\n            // Log the filtering results\n            console.log(\"\\uD83C\\uDFAC Filtering results:\", {\n                totalMovies: data.length,\n                filteredMovies: filteredMovies.length,\n                appliedFilters: currentFilters,\n                firstMovie: filteredMovies[0] ? {\n                    title: filteredMovies[0].title,\n                    genre: filteredMovies[0].genre,\n                    quality: filteredMovies[0].quality,\n                    rating: filteredMovies[0].rating,\n                    released: filteredMovies[0].released\n                } : null\n            });\n            setMovies(filteredMovies);\n        } catch (error) {\n            console.error(\"Error fetching movies:\", error);\n            setMovies([]);\n        } finally{\n            setLoading(false);\n        }\n    }, 300), []);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        fetchMovies(search, filters);\n    }, [\n        search,\n        filters,\n        fetchMovies\n    ]);\n    // Subscribe to navigation events for filter updates\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const handleNavigation = (e)=>{\n            var _e_detail, _e_detail1;\n            const newFilters = (_e_detail = e.detail) === null || _e_detail === void 0 ? void 0 : _e_detail.filters;\n            if (newFilters) {\n                setFilters(newFilters);\n            }\n            const newSearch = (_e_detail1 = e.detail) === null || _e_detail1 === void 0 ? void 0 : _e_detail1.search;\n            if (typeof newSearch === \"string\") {\n                setSearch(newSearch);\n            }\n        };\n        window.addEventListener(\"updateFilters\", handleNavigation);\n        return ()=>window.removeEventListener(\"updateFilters\", handleNavigation);\n    }, []);\n    const handleImageError = (e)=>{\n        e.currentTarget.src = \"/placeholder.jpg\" // Make sure to add a placeholder image in your public folder\n        ;\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"relative min-h-screen pb-20\",\n        children: loading ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"flex justify-center items-center h-[50vh]\",\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"w-8 h-8 border-4 border-orange-500 border-t-transparent rounded-full animate-spin\"\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\yilak\\\\Documents\\\\P\\\\projects\\\\BTIFLIX\\\\Btiflix\\\\frontend\\\\components\\\\MovieGrid.tsx\",\n                lineNumber: 175,\n                columnNumber: 11\n            }, this)\n        }, void 0, false, {\n            fileName: \"C:\\\\Users\\\\yilak\\\\Documents\\\\P\\\\projects\\\\BTIFLIX\\\\Btiflix\\\\frontend\\\\components\\\\MovieGrid.tsx\",\n            lineNumber: 174,\n            columnNumber: 9\n        }, this) : movies.length > 0 ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5 xl:grid-cols-8 gap-4 p-8\",\n            children: movies.map((movie)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    onClick: ()=>router.push(\"/movie/\".concat(encodeURIComponent(movie.title))),\n                    className: \"group relative overflow-hidden rounded-lg transition-transform duration-300 hover:scale-105 focus:outline-none cursor-pointer\",\n                    style: {\n                        width: \"183px\",\n                        height: \"253px\"\n                    },\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"relative w-full h-full\",\n                        children: [\n                            movie.thumbnailUrl ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"img\", {\n                                src: movie.thumbnailUrl,\n                                alt: movie.title,\n                                onError: handleImageError,\n                                className: \"w-full h-full object-cover rounded-md\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\yilak\\\\Documents\\\\P\\\\projects\\\\BTIFLIX\\\\Btiflix\\\\frontend\\\\components\\\\MovieGrid.tsx\",\n                                lineNumber: 188,\n                                columnNumber: 19\n                            }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"w-full h-full bg-gray-800 flex items-center justify-center rounded-md\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                    className: \"text-gray-400 text-xs\",\n                                    children: \"No Image\"\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\yilak\\\\Documents\\\\P\\\\projects\\\\BTIFLIX\\\\Btiflix\\\\frontend\\\\components\\\\MovieGrid.tsx\",\n                                    lineNumber: 196,\n                                    columnNumber: 21\n                                }, this)\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\yilak\\\\Documents\\\\P\\\\projects\\\\BTIFLIX\\\\Btiflix\\\\frontend\\\\components\\\\MovieGrid.tsx\",\n                                lineNumber: 195,\n                                columnNumber: 19\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"absolute inset-0 bg-black/80 opacity-0 group-hover:opacity-100 transition-opacity duration-300 p-2 flex flex-col justify-end\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                                        className: \"text-white text-xs font-medium truncate mb-1\",\n                                        children: movie.title\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\yilak\\\\Documents\\\\P\\\\projects\\\\BTIFLIX\\\\Btiflix\\\\frontend\\\\components\\\\MovieGrid.tsx\",\n                                        lineNumber: 201,\n                                        columnNumber: 19\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"flex items-center justify-between text-gray-300 text-[10px] mt-1\",\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                children: movie.genre || \"Unknown\"\n                                            }, void 0, false, {\n                                                fileName: \"C:\\\\Users\\\\yilak\\\\Documents\\\\P\\\\projects\\\\BTIFLIX\\\\Btiflix\\\\frontend\\\\components\\\\MovieGrid.tsx\",\n                                                lineNumber: 203,\n                                                columnNumber: 21\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                children: movie.released ? new Date(movie.released).getFullYear() : \"N/A\"\n                                            }, void 0, false, {\n                                                fileName: \"C:\\\\Users\\\\yilak\\\\Documents\\\\P\\\\projects\\\\BTIFLIX\\\\Btiflix\\\\frontend\\\\components\\\\MovieGrid.tsx\",\n                                                lineNumber: 204,\n                                                columnNumber: 21\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"C:\\\\Users\\\\yilak\\\\Documents\\\\P\\\\projects\\\\BTIFLIX\\\\Btiflix\\\\frontend\\\\components\\\\MovieGrid.tsx\",\n                                        lineNumber: 202,\n                                        columnNumber: 19\n                                    }, this),\n                                    movie.rating && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"absolute top-2 right-2 bg-orange-500 text-white text-[10px] px-1.5 py-0.5 rounded\",\n                                        children: [\n                                            \"★ \",\n                                            movie.rating\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"C:\\\\Users\\\\yilak\\\\Documents\\\\P\\\\projects\\\\BTIFLIX\\\\Btiflix\\\\frontend\\\\components\\\\MovieGrid.tsx\",\n                                        lineNumber: 207,\n                                        columnNumber: 21\n                                    }, this),\n                                    movie.quality && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"absolute top-2 left-2 bg-blue-500 text-white text-[10px] px-1.5 py-0.5 rounded\",\n                                        children: movie.quality\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\yilak\\\\Documents\\\\P\\\\projects\\\\BTIFLIX\\\\Btiflix\\\\frontend\\\\components\\\\MovieGrid.tsx\",\n                                        lineNumber: 212,\n                                        columnNumber: 21\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"C:\\\\Users\\\\yilak\\\\Documents\\\\P\\\\projects\\\\BTIFLIX\\\\Btiflix\\\\frontend\\\\components\\\\MovieGrid.tsx\",\n                                lineNumber: 200,\n                                columnNumber: 17\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\yilak\\\\Documents\\\\P\\\\projects\\\\BTIFLIX\\\\Btiflix\\\\frontend\\\\components\\\\MovieGrid.tsx\",\n                        lineNumber: 186,\n                        columnNumber: 15\n                    }, this)\n                }, movie.id, false, {\n                    fileName: \"C:\\\\Users\\\\yilak\\\\Documents\\\\P\\\\projects\\\\BTIFLIX\\\\Btiflix\\\\frontend\\\\components\\\\MovieGrid.tsx\",\n                    lineNumber: 180,\n                    columnNumber: 13\n                }, this))\n        }, void 0, false, {\n            fileName: \"C:\\\\Users\\\\yilak\\\\Documents\\\\P\\\\projects\\\\BTIFLIX\\\\Btiflix\\\\frontend\\\\components\\\\MovieGrid.tsx\",\n            lineNumber: 178,\n            columnNumber: 9\n        }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"flex flex-col items-center justify-center h-[50vh] text-gray-500\",\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                    className: \"text-sm mb-2\",\n                    children: \"No movies found\"\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\yilak\\\\Documents\\\\P\\\\projects\\\\BTIFLIX\\\\Btiflix\\\\frontend\\\\components\\\\MovieGrid.tsx\",\n                    lineNumber: 223,\n                    columnNumber: 11\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                    className: \"text-xs\",\n                    children: \"Try adjusting your filters or search terms\"\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\yilak\\\\Documents\\\\P\\\\projects\\\\BTIFLIX\\\\Btiflix\\\\frontend\\\\components\\\\MovieGrid.tsx\",\n                    lineNumber: 224,\n                    columnNumber: 11\n                }, this)\n            ]\n        }, void 0, true, {\n            fileName: \"C:\\\\Users\\\\yilak\\\\Documents\\\\P\\\\projects\\\\BTIFLIX\\\\Btiflix\\\\frontend\\\\components\\\\MovieGrid.tsx\",\n            lineNumber: 222,\n            columnNumber: 9\n        }, this)\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\yilak\\\\Documents\\\\P\\\\projects\\\\BTIFLIX\\\\Btiflix\\\\frontend\\\\components\\\\MovieGrid.tsx\",\n        lineNumber: 172,\n        columnNumber: 5\n    }, this);\n}\n_s(MovieGrid, \"NM63V0Gbrm11oNaKfdSA2eLitO8=\", false, function() {\n    return [\n        next_navigation__WEBPACK_IMPORTED_MODULE_3__.useRouter\n    ];\n});\n_c = MovieGrid;\nvar _c;\n$RefreshReg$(_c, \"MovieGrid\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/MovieGrid.tsx\n"));

/***/ })

});