"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./components/MovieGrid.tsx":
/*!**********************************!*\
  !*** ./components/MovieGrid.tsx ***!
  \**********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ MovieGrid; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var lodash_debounce__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash/debounce */ \"(app-pages-browser)/./node_modules/lodash/debounce.js\");\n/* harmony import */ var lodash_debounce__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash_debounce__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/navigation */ \"(app-pages-browser)/./node_modules/next/dist/api/navigation.js\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\nfunction MovieGrid() {\n    _s();\n    const [movies, setMovies] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]) // ✅ Ensures movies is always an array\n    ;\n    const [search, setSearch] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const router = (0,next_navigation__WEBPACK_IMPORTED_MODULE_3__.useRouter)() // ✅ Use router for navigation\n    ;\n    const fetchMovies = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(lodash_debounce__WEBPACK_IMPORTED_MODULE_2___default()(async (searchTerm)=>{\n        try {\n            const params = new URLSearchParams();\n            if (searchTerm) params.append(\"search\", searchTerm);\n            params.append(\"limit\", \"102\");\n            const res = await fetch(\"/api/movies?\".concat(params));\n            const data = await res.json();\n            // ✅ Ensure we only set valid array responses\n            setMovies(Array.isArray(data) ? data : []);\n        } catch (error) {\n            console.error(\"Error fetching movies:\", error);\n            setMovies([]) // ✅ Fallback to empty array on failure\n            ;\n        }\n    }, 300), []);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        fetchMovies(search);\n    }, [\n        search,\n        fetchMovies\n    ]) // ✅ Proper dependency array\n    ;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"relative min-h-screen pb-20\",\n        children: movies.length > 0 ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5 xl:grid-cols-8 gap-4 p-8\",\n            children: movies.map((movie)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    onClick: ()=>router.push(\"/movie/\".concat(movie.id)),\n                    className: \"group relative overflow-hidden rounded-lg transition-transform duration-300 hover:scale-105 focus:outline-none cursor-pointer\",\n                    style: {\n                        width: \"183px\",\n                        height: \"253px\"\n                    },\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"relative w-full h-full\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"img\", {\n                                src: movie.thumbnailUrl,\n                                className: \"w-full h-full object-cover rounded-md\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\yilak\\\\Documents\\\\P\\\\projects\\\\BTIFLIX\\\\Btiflix\\\\frontend\\\\components\\\\MovieGrid.tsx\",\n                                lineNumber: 61,\n                                columnNumber: 17\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"absolute inset-0 bg-black/80 opacity-0 group-hover:opacity-100 transition-opacity duration-300 p-2 flex flex-col justify-end\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                                        className: \"text-white font-medium text-sm leading-tight\",\n                                        children: movie.title\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\yilak\\\\Documents\\\\P\\\\projects\\\\BTIFLIX\\\\Btiflix\\\\frontend\\\\components\\\\MovieGrid.tsx\",\n                                        lineNumber: 69,\n                                        columnNumber: 19\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"flex items-center justify-between text-gray-300 text-xs mt-1\",\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                children: movie.genre || \"Unknown\"\n                                            }, void 0, false, {\n                                                fileName: \"C:\\\\Users\\\\yilak\\\\Documents\\\\P\\\\projects\\\\BTIFLIX\\\\Btiflix\\\\frontend\\\\components\\\\MovieGrid.tsx\",\n                                                lineNumber: 71,\n                                                columnNumber: 21\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                children: movie.year || \"N/A\"\n                                            }, void 0, false, {\n                                                fileName: \"C:\\\\Users\\\\yilak\\\\Documents\\\\P\\\\projects\\\\BTIFLIX\\\\Btiflix\\\\frontend\\\\components\\\\MovieGrid.tsx\",\n                                                lineNumber: 72,\n                                                columnNumber: 21\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"C:\\\\Users\\\\yilak\\\\Documents\\\\P\\\\projects\\\\BTIFLIX\\\\Btiflix\\\\frontend\\\\components\\\\MovieGrid.tsx\",\n                                        lineNumber: 70,\n                                        columnNumber: 19\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"C:\\\\Users\\\\yilak\\\\Documents\\\\P\\\\projects\\\\BTIFLIX\\\\Btiflix\\\\frontend\\\\components\\\\MovieGrid.tsx\",\n                                lineNumber: 68,\n                                columnNumber: 17\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\yilak\\\\Documents\\\\P\\\\projects\\\\BTIFLIX\\\\Btiflix\\\\frontend\\\\components\\\\MovieGrid.tsx\",\n                        lineNumber: 59,\n                        columnNumber: 15\n                    }, this)\n                }, movie.id, false, {\n                    fileName: \"C:\\\\Users\\\\yilak\\\\Documents\\\\P\\\\projects\\\\BTIFLIX\\\\Btiflix\\\\frontend\\\\components\\\\MovieGrid.tsx\",\n                    lineNumber: 53,\n                    columnNumber: 13\n                }, this))\n        }, void 0, false, {\n            fileName: \"C:\\\\Users\\\\yilak\\\\Documents\\\\P\\\\projects\\\\BTIFLIX\\\\Btiflix\\\\frontend\\\\components\\\\MovieGrid.tsx\",\n            lineNumber: 51,\n            columnNumber: 9\n        }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n            className: \"text-center text-gray-500 mt-10\",\n            children: \"No movies found.\"\n        }, void 0, false, {\n            fileName: \"C:\\\\Users\\\\yilak\\\\Documents\\\\P\\\\projects\\\\BTIFLIX\\\\Btiflix\\\\frontend\\\\components\\\\MovieGrid.tsx\",\n            lineNumber: 80,\n            columnNumber: 9\n        }, this) // ✅ Graceful handling of empty results\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\yilak\\\\Documents\\\\P\\\\projects\\\\BTIFLIX\\\\Btiflix\\\\frontend\\\\components\\\\MovieGrid.tsx\",\n        lineNumber: 48,\n        columnNumber: 5\n    }, this);\n}\n_s(MovieGrid, \"nFtPbEVwMijzruOixna8j52Pc8I=\", false, function() {\n    return [\n        next_navigation__WEBPACK_IMPORTED_MODULE_3__.useRouter\n    ];\n});\n_c = MovieGrid;\nvar _c;\n$RefreshReg$(_c, \"MovieGrid\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2NvbXBvbmVudHMvTW92aWVHcmlkLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFFK0Q7QUFDekI7QUFDSztBQWE1QixTQUFTTTs7SUFDdEIsTUFBTSxDQUFDQyxRQUFRQyxVQUFVLEdBQUdOLCtDQUFRQSxDQUFVLEVBQUUsRUFBRSxzQ0FBc0M7O0lBQ3hGLE1BQU0sQ0FBQ08sUUFBUUMsVUFBVSxHQUFHUiwrQ0FBUUEsQ0FBQztJQUNyQyxNQUFNUyxTQUFTTiwwREFBU0EsR0FBRyw4QkFBOEI7O0lBRXpELE1BQU1PLGNBQWNULGtEQUFXQSxDQUM3QkMsc0RBQVFBLENBQUMsT0FBT1M7UUFDZCxJQUFJO1lBQ0YsTUFBTUMsU0FBUyxJQUFJQztZQUNuQixJQUFJRixZQUFZQyxPQUFPRSxNQUFNLENBQUMsVUFBVUg7WUFDeENDLE9BQU9FLE1BQU0sQ0FBQyxTQUFTO1lBRXZCLE1BQU1DLE1BQU0sTUFBTUMsTUFBTSxlQUFzQixPQUFQSjtZQUN2QyxNQUFNSyxPQUFPLE1BQU1GLElBQUlHLElBQUk7WUFFM0IsNkNBQTZDO1lBQzdDWixVQUFVYSxNQUFNQyxPQUFPLENBQUNILFFBQVFBLE9BQU8sRUFBRTtRQUMzQyxFQUFFLE9BQU9JLE9BQU87WUFDZEMsUUFBUUQsS0FBSyxDQUFDLDBCQUEwQkE7WUFDeENmLFVBQVUsRUFBRSxFQUFFLHVDQUF1Qzs7UUFDdkQ7SUFDRixHQUFHLE1BQ0gsRUFBRTtJQUdKUCxnREFBU0EsQ0FBQztRQUNSVyxZQUFZSDtJQUNkLEdBQUc7UUFBQ0E7UUFBUUc7S0FBWSxFQUFFLDRCQUE0Qjs7SUFFdEQscUJBQ0UsOERBQUNhO1FBQUlDLFdBQVU7a0JBRVpuQixPQUFPb0IsTUFBTSxHQUFHLGtCQUNmLDhEQUFDRjtZQUFJQyxXQUFVO3NCQUNabkIsT0FBT3FCLEdBQUcsQ0FBQyxDQUFDQyxzQkFDWCw4REFBQ0o7b0JBRUNLLFNBQVMsSUFBTW5CLE9BQU9vQixJQUFJLENBQUMsVUFBbUIsT0FBVEYsTUFBTUcsRUFBRTtvQkFDN0NOLFdBQVU7b0JBQ1ZPLE9BQU87d0JBQUVDLE9BQU87d0JBQVNDLFFBQVE7b0JBQVE7OEJBRXpDLDRFQUFDVjt3QkFBSUMsV0FBVTs7MENBRWIsOERBQUNVO2dDQUNDQyxLQUFLUixNQUFNUyxZQUFZO2dDQUV2QlosV0FBVTs7Ozs7OzBDQUlaLDhEQUFDRDtnQ0FBSUMsV0FBVTs7a0RBQ2IsOERBQUNhO3dDQUFHYixXQUFVO2tEQUFnREcsTUFBTVcsS0FBSzs7Ozs7O2tEQUN6RSw4REFBQ2Y7d0NBQUlDLFdBQVU7OzBEQUNiLDhEQUFDZTswREFBTVosTUFBTWEsS0FBSyxJQUFJOzs7Ozs7MERBQ3RCLDhEQUFDRDswREFBTVosTUFBTWMsSUFBSSxJQUFJOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7bUJBbEJ0QmQsTUFBTUcsRUFBRTs7Ozs7Ozs7O2lDQTBCbkIsOERBQUNZO1lBQUVsQixXQUFVO3NCQUFrQzs7Ozs7aUJBQXFCLHVDQUF1Qzs7Ozs7O0FBSW5IO0dBbEV3QnBCOztRQUdQRCxzREFBU0E7OztLQUhGQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9jb21wb25lbnRzL01vdmllR3JpZC50c3g/ZjgwNCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIGNsaWVudCdcblxuaW1wb3J0IFJlYWN0LCB7IHVzZUVmZmVjdCwgdXNlU3RhdGUsIHVzZUNhbGxiYWNrIH0gZnJvbSAncmVhY3QnXG5pbXBvcnQgZGVib3VuY2UgZnJvbSAnbG9kYXNoL2RlYm91bmNlJ1xuaW1wb3J0IHsgdXNlUm91dGVyIH0gZnJvbSAnbmV4dC9uYXZpZ2F0aW9uJ1xuXG5pbnRlcmZhY2UgTW92aWUge1xuICBpZDogc3RyaW5nO1xuICB0aXRsZTogc3RyaW5nO1xuICB5ZWFyPzogbnVtYmVyO1xuICBwbGF0Zm9ybT86IHN0cmluZztcbiAgdGh1bWJuYWlsVXJsOiBzdHJpbmc7XG4gIGdlbnJlPzogc3RyaW5nO1xuICBxdWFsaXR5Pzogc3RyaW5nO1xuICByYXRpbmc/OiBzdHJpbmc7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1vdmllR3JpZCgpIHtcbiAgY29uc3QgW21vdmllcywgc2V0TW92aWVzXSA9IHVzZVN0YXRlPE1vdmllW10+KFtdKSAvLyDinIUgRW5zdXJlcyBtb3ZpZXMgaXMgYWx3YXlzIGFuIGFycmF5XG4gIGNvbnN0IFtzZWFyY2gsIHNldFNlYXJjaF0gPSB1c2VTdGF0ZSgnJylcbiAgY29uc3Qgcm91dGVyID0gdXNlUm91dGVyKCkgLy8g4pyFIFVzZSByb3V0ZXIgZm9yIG5hdmlnYXRpb25cblxuICBjb25zdCBmZXRjaE1vdmllcyA9IHVzZUNhbGxiYWNrKFxuICAgIGRlYm91bmNlKGFzeW5jIChzZWFyY2hUZXJtOiBzdHJpbmcpID0+IHtcbiAgICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IHBhcmFtcyA9IG5ldyBVUkxTZWFyY2hQYXJhbXMoKVxuICAgICAgICBpZiAoc2VhcmNoVGVybSkgcGFyYW1zLmFwcGVuZCgnc2VhcmNoJywgc2VhcmNoVGVybSlcbiAgICAgICAgcGFyYW1zLmFwcGVuZCgnbGltaXQnLCAnMTAyJylcblxuICAgICAgICBjb25zdCByZXMgPSBhd2FpdCBmZXRjaChgL2FwaS9tb3ZpZXM/JHtwYXJhbXN9YClcbiAgICAgICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlcy5qc29uKClcblxuICAgICAgICAvLyDinIUgRW5zdXJlIHdlIG9ubHkgc2V0IHZhbGlkIGFycmF5IHJlc3BvbnNlc1xuICAgICAgICBzZXRNb3ZpZXMoQXJyYXkuaXNBcnJheShkYXRhKSA/IGRhdGEgOiBbXSlcbiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvciBmZXRjaGluZyBtb3ZpZXM6XCIsIGVycm9yKVxuICAgICAgICBzZXRNb3ZpZXMoW10pIC8vIOKchSBGYWxsYmFjayB0byBlbXB0eSBhcnJheSBvbiBmYWlsdXJlXG4gICAgICB9XG4gICAgfSwgMzAwKSxcbiAgICBbXVxuICApXG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBmZXRjaE1vdmllcyhzZWFyY2gpXG4gIH0sIFtzZWFyY2gsIGZldGNoTW92aWVzXSkgLy8g4pyFIFByb3BlciBkZXBlbmRlbmN5IGFycmF5XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNsYXNzTmFtZT1cInJlbGF0aXZlIG1pbi1oLXNjcmVlbiBwYi0yMFwiPlxuICAgICAgey8qIE1vdmllIEdyaWQgKi99XG4gICAgICB7bW92aWVzLmxlbmd0aCA+IDAgPyAoXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZ3JpZCBncmlkLWNvbHMtMiBzbTpncmlkLWNvbHMtMyBtZDpncmlkLWNvbHMtNCBsZzpncmlkLWNvbHMtNSB4bDpncmlkLWNvbHMtOCBnYXAtNCBwLThcIj5cbiAgICAgICAgICB7bW92aWVzLm1hcCgobW92aWUpID0+IChcbiAgICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgICAga2V5PXttb3ZpZS5pZH1cbiAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4gcm91dGVyLnB1c2goYC9tb3ZpZS8ke21vdmllLmlkfWApfSAvLyDinIUgVXNlIElEIGZvciBiZXR0ZXIgVVJMIHN0cnVjdHVyZVxuICAgICAgICAgICAgICBjbGFzc05hbWU9XCJncm91cCByZWxhdGl2ZSBvdmVyZmxvdy1oaWRkZW4gcm91bmRlZC1sZyB0cmFuc2l0aW9uLXRyYW5zZm9ybSBkdXJhdGlvbi0zMDAgaG92ZXI6c2NhbGUtMTA1IGZvY3VzOm91dGxpbmUtbm9uZSBjdXJzb3ItcG9pbnRlclwiXG4gICAgICAgICAgICAgIHN0eWxlPXt7IHdpZHRoOiAnMTgzcHgnLCBoZWlnaHQ6ICcyNTNweCcgfX0gLy8g4pyFIE1haW50YWlucyAyOjMgQXNwZWN0IFJhdGlvXG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicmVsYXRpdmUgdy1mdWxsIGgtZnVsbFwiPlxuICAgICAgICAgICAgICAgIHsvKiBNb3ZpZSBUaHVtYm5haWwgKi99XG4gICAgICAgICAgICAgICAgPGltZyBcbiAgICAgICAgICAgICAgICAgIHNyYz17bW92aWUudGh1bWJuYWlsVXJsfVxuICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cInctZnVsbCBoLWZ1bGwgb2JqZWN0LWNvdmVyIHJvdW5kZWQtbWRcIlxuICAgICAgICAgICAgICAgIC8+XG5cbiAgICAgICAgICAgICAgICB7LyogSG92ZXIgRWZmZWN0IC0gTW92aWUgSW5mbyAqL31cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImFic29sdXRlIGluc2V0LTAgYmctYmxhY2svODAgb3BhY2l0eS0wIGdyb3VwLWhvdmVyOm9wYWNpdHktMTAwIHRyYW5zaXRpb24tb3BhY2l0eSBkdXJhdGlvbi0zMDAgcC0yIGZsZXggZmxleC1jb2wganVzdGlmeS1lbmRcIj5cbiAgICAgICAgICAgICAgICAgIDxoMyBjbGFzc05hbWU9XCJ0ZXh0LXdoaXRlIGZvbnQtbWVkaXVtIHRleHQtc20gbGVhZGluZy10aWdodFwiPnttb3ZpZS50aXRsZX08L2gzPlxuICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWJldHdlZW4gdGV4dC1ncmF5LTMwMCB0ZXh0LXhzIG10LTFcIj5cbiAgICAgICAgICAgICAgICAgICAgPHNwYW4+e21vdmllLmdlbnJlIHx8ICdVbmtub3duJ308L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgIDxzcGFuPnttb3ZpZS55ZWFyIHx8ICdOL0EnfTwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICkpfVxuICAgICAgICA8L2Rpdj5cbiAgICAgICkgOiAoXG4gICAgICAgIDxwIGNsYXNzTmFtZT1cInRleHQtY2VudGVyIHRleHQtZ3JheS01MDAgbXQtMTBcIj5ObyBtb3ZpZXMgZm91bmQuPC9wPiAvLyDinIUgR3JhY2VmdWwgaGFuZGxpbmcgb2YgZW1wdHkgcmVzdWx0c1xuICAgICAgKX1cbiAgICA8L2Rpdj5cbiAgKVxufVxuIl0sIm5hbWVzIjpbIlJlYWN0IiwidXNlRWZmZWN0IiwidXNlU3RhdGUiLCJ1c2VDYWxsYmFjayIsImRlYm91bmNlIiwidXNlUm91dGVyIiwiTW92aWVHcmlkIiwibW92aWVzIiwic2V0TW92aWVzIiwic2VhcmNoIiwic2V0U2VhcmNoIiwicm91dGVyIiwiZmV0Y2hNb3ZpZXMiLCJzZWFyY2hUZXJtIiwicGFyYW1zIiwiVVJMU2VhcmNoUGFyYW1zIiwiYXBwZW5kIiwicmVzIiwiZmV0Y2giLCJkYXRhIiwianNvbiIsIkFycmF5IiwiaXNBcnJheSIsImVycm9yIiwiY29uc29sZSIsImRpdiIsImNsYXNzTmFtZSIsImxlbmd0aCIsIm1hcCIsIm1vdmllIiwib25DbGljayIsInB1c2giLCJpZCIsInN0eWxlIiwid2lkdGgiLCJoZWlnaHQiLCJpbWciLCJzcmMiLCJ0aHVtYm5haWxVcmwiLCJoMyIsInRpdGxlIiwic3BhbiIsImdlbnJlIiwieWVhciIsInAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/MovieGrid.tsx\n"));

/***/ })

});